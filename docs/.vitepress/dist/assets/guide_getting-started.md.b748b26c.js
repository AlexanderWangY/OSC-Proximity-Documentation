import{_ as e,o as t,c as a,Q as s}from"./chunks/framework.ec8f7e8e.js";const o="/imgs/docimg1.png",n="/imgs/docimg2.png",b=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","filePath":"guide/getting-started.md"}'),i={name:"guide/getting-started.md"},l=s('<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h1><h2 id="preface" tabindex="-1">Preface <a class="header-anchor" href="#preface" aria-label="Permalink to &quot;Preface&quot;">​</a></h2><p>Depending on what Operating System (Linux, Windows, etc.) you are running, you set up instructions will be different. Although some Linux distribution is <strong>highly</strong> encouraged, it is not at all a requirement to work on the project.</p><p>On the <code>On this page</code> column to the right, there a few options for setting up. Make sure to follow the one that is suited for your operating system!</p><p>We are excited to have you! 🤗</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><p>Although you do not need any prior experience to contribute to this open source project, a bit of experience with web development would help you <strong>greatly</strong> in contributing and understanding the code.</p><p>Here are some recommeneded simple tutorials to get you caught up:</p><ul><li><strong>HTML/CSS:</strong> <a href="https://www.youtube.com/watch?v=G3e-cpL7ofc" target="_blank" rel="noreferrer">HTML &amp; CSS Full Course - Beginner to Pro</a></li><li><strong>Javascript:</strong> <a href="https://www.youtube.com/watch?v=EfAl9bwzVZk" target="_blank" rel="noreferrer">JavaScript Full Course for Beginners</a></li><li><strong>ExpressJS:</strong> <a href="https://www.youtube.com/watch?v=39znK--Yo1o&amp;list=PL_cUvD4qzbkwp6pxx27pqgohrsP8v1Wj2&amp;index=1" target="_blank" rel="noreferrer">ExpressJS Tutorial</a></li><li><strong>React Native</strong> <a href="https://www.youtube.com/watch?v=obH0Po_RdWk&amp;t=2904s" target="_blank" rel="noreferrer">React Native Tutorial</a><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You only need a basic understanding. Don&#39;t be afraid to ask teammates to help you understand the code better!</p></div></li></ul><p>However, the best way to learn (in my experience) is always to read the code and ask questions. Contact a tech lead if you are having trouble and we will be more than glad to help you learn the tech stack!</p><h2 id="setting-up-for-linux" tabindex="-1">Setting Up for Linux <a class="header-anchor" href="#setting-up-for-linux" aria-label="Permalink to &quot;Setting Up for Linux&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Each code snippet will have two versions. One for <a href="https://embeddedinventor.com/linux-distros-that-uses-apt-commands-for-package-management/" target="_blank" rel="noreferrer">APT</a> managed distros and the other for <a href="https://embeddedinventor.com/linux-distros-that-uses-yum-or-dnf-for-package-management/" target="_blank" rel="noreferrer">DNF/RPM</a> managed distros. If there is nothing differentiating them then it will work for both types. <strong>It will tell you in the top right corner!</strong></p></div><h3 id="installing-node-js-and-git" tabindex="-1">Installing Node.JS and Git <a class="header-anchor" href="#installing-node-js-and-git" aria-label="Permalink to &quot;Installing Node.JS and Git&quot;">​</a></h3><p>First, ensure you have a stable version of Node.js installed on your system as well as Git.</p><div class="language-terminal-(apt) vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal-(apt)</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo apt install nodejs git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo apt install nodejs git</span></span></code></pre></div><p>or</p><div class="language-terminal-(dnf/rpm) vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal-(dnf/rpm)</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ sudo dnf install nodejs git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ sudo dnf install nodejs git</span></span></code></pre></div><h3 id="branching-and-cloning-the-repository" tabindex="-1">Branching and Cloning the Repository <a class="header-anchor" href="#branching-and-cloning-the-repository" aria-label="Permalink to &quot;Branching and Cloning the Repository&quot;">​</a></h3><p>When contributing to the project, you want to first commit changes into your personal repository that is forked from the main.</p><p>Travel to our <a href="https://github.com/ufosc/OSC-Proximity-Chat-App" target="_blank" rel="noreferrer">Github repository</a> and create a new fork into your personal repositories.</p><p><img src="'+o+'" alt="Guide1"></p><p>Then, copy your new forked repository&#39;s clone address and return to your terminal/bash.</p><p><img src="'+n+`" alt="Guide2"></p><p>In your terminal/bash, navigate to a folder/location you would like your repository to be in.</p><p>Then,</p><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ git clone &lt;paste your repository&#39;s address&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ git clone &lt;paste your repository&#39;s address&gt;</span></span></code></pre></div><p>You should see it clone into that folder. Congratulations 🎉! You are one step closer to getting your hands on some code! Let&#39;s keep going...</p><p>Navigate into the repository:</p><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd OSC-Proximity-Chat-App</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd OSC-Proximity-Chat-App</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If at any point you are confused or run into errors, contact @alexwala (a.k.a Alex Wang) in the <a href="https://discord.gg/CedfucmXbq" target="_blank" rel="noreferrer">discord</a></p></div><h3 id="installing-nvm" tabindex="-1">Installing NVM <a class="header-anchor" href="#installing-nvm" aria-label="Permalink to &quot;Installing NVM&quot;">​</a></h3><p>Before we go any further, we need to install Node Version Manager (nvm).</p><ol><li>Install NVM with either <code>curl</code> or <code>wget</code></li></ol><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;"># or</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;"># or</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">$ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash</span></span></code></pre></div><ol start="2"><li>Profile Configurations (Optional) Although the above process should have automatically added nvm config to your profile, we can also manually add it if it failed to do so.</li></ol><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ export NVM_DIR=&quot;$([ -z &quot;\${XDG_CONFIG_HOME-}&quot; ] &amp;&amp; printf %s &quot;\${HOME}/.nvm&quot; || printf %s &quot;\${XDG_CONFIG_HOME}/nvm&quot;)&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ export NVM_DIR=&quot;$([ -z &quot;\${XDG_CONFIG_HOME-}&quot; ] &amp;&amp; printf %s &quot;\${HOME}/.nvm&quot; || printf %s &quot;\${XDG_CONFIG_HOME}/nvm&quot;)&quot;</span></span>
<span class="line"><span style="color:#24292e;">[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; \\. &quot;$NVM_DIR/nvm.sh&quot;</span></span></code></pre></div><ol start="3"><li>Reload Shell Config Now reload the configuration to get it up and running!</li></ol><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ source ~/.bashrc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ source ~/.bashrc</span></span></code></pre></div><p>You can check to see if <code>NVM</code> is installed correctly with:</p><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ nvm -v</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ nvm -v</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Did this not work for you? Let one of the tech leads know!</p></div><hr><h3 id="installing-dependencies" tabindex="-1">Installing Dependencies <a class="header-anchor" href="#installing-dependencies" aria-label="Permalink to &quot;Installing Dependencies&quot;">​</a></h3><p>Now, there are two paths you can take. You can either set-up for <strong>frontend</strong> or <strong>backend</strong> (or both if you so choose).</p><h4 id="frontend" tabindex="-1">Frontend <a class="header-anchor" href="#frontend" aria-label="Permalink to &quot;Frontend&quot;">​</a></h4><p>Navigate into the <code>client</code> folder:</p><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ cd client</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ cd client</span></span></code></pre></div><p>Install the required dependencies using Node.js:</p><div class="language-terminal vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">terminal</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">$ npm install</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">$ npm install</span></span></code></pre></div><p>Perfect 👍!</p><p>Now we need to configure your environment variables for API calls to the backend server!!!</p><p>Locate your <code>config_example.md</code> file and open it to edit it. Change the current variable stand-in to your machines current IPv4 address! Here is a quick website on how to find your IPv4 address. <a href="https://linuxize.com/post/how-to-find-ip-address-linux/" target="_blank" rel="noreferrer">How to find my IP Address on Linux</a>.</p><p>Your <code>config_example.md</code> should look something like this:</p><div class="language-config_example.md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">config_example.md</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">EXPO_PUBLIC_LOCALHOST_ADDRESS = &lt;YOUR IPv4 ADDRESS&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">EXPO_PUBLIC_LOCALHOST_ADDRESS = &lt;YOUR IPv4 ADDRESS&gt;</span></span></code></pre></div><p>Rename <code>config_example.md</code> to just <code>.env</code> and save it.</p><p>You are now done setting up the frontend for development! Navigate to <a href="/guide/dev-tools.html">Developer Tools</a> to understand more of the development process! 🎉 🎉 🎉 🎉</p><p>or continue to also set up backend ~</p>`,57),r=[l];function p(c,d,h,u,g,m){return t(),a("div",null,r)}const y=e(i,[["render",p]]);export{b as __pageData,y as default};
